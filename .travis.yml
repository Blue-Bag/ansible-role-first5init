---
# We need sudo for some of the Docker commands.
sudo: required

env:
  - distro: centos7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distro: centos6
    init: /sbin/init
    run_opts: ""
  - distro: fedora24
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distro: ubuntu1604
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distro: ubuntu1404
    init: /sbin/init
    run_opts: ""
  - distro: debian8
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"

# Tell Travis to start Docker when it brings up an environment.
services:
  - docker

before_install:
  # Pull container from Docker Hub.
  - 'docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
  # Create a random file to store the container ID.
  - container_id=$(mktemp)

  # Run container detached, with our role mounted inside.
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'


  # Ansible syntax check.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check'

  # Test the Ansible role.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml'

  # Test role idempotence.
  - idempotence=$(mktemp)
  - docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)


notifications:
  slack:
    secure: YzMaWNJuYVIPtHcSOTFFiyz33/Lb1uS1dbCvPrPACbs6kCSmbM2nT/OVE44Q6vFTBnMFhHfjeaD1KF7e0BlPOgNGww5xv4F+WBhHYmrDW/2fE+HyIjNZtn4MuDQq+WaVGEIQAJdSpiBjejFm+AAerM2g07UuDMt3V4szEzPqoz1CDo6u3G4IvuMioV7nOxgBCxj8719tW1XRxmXSGrVdtQ3CuG8Yt5nHN5P5yJLub8pMyWir+OHYKc0UoHtthQe6tw3tvRz/l8l3UHpZd32aA57tB8wkSZsEWLXZL8jBweR1VFcqbGVOsipEiz9PKyynIoDzL+TKwoBOuyKQZ+3kwv9SsEEUqiPnIx5SYPjIp/rp0NOQVyAxc3D64OVERWA/cxs3jUlhoMaEUtUpzrcHwyOIYjU9GMqbsE7roVRxYV4SeVmSMgxxoUB2aFVuQ82fgtwc7VP7GzLw4Ej+druuqBxIWagXaNret1i11TZmtWOm/7pXDoGlJycVqpmMSVodE4Sl+Y9MjxZPssRI3HLV3IeieBK+SiJaEFQfguTaz4S1T7j9f1xTlTGVm4qLXMTQ3LFdZ/3rEKUE++idfYCuXQj7i2CiDnaDv+X1idlSwk216VKKjYdw+U8veLBbTsIs0e7RquCg5s6pWILO9GAj3Bpt9YuefxaM/+YToawbfus=
